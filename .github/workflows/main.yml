name: Deploy

on:
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    - name: chmod
      run: chmod 744 gradlew
      # if: runner.os == 'Linux' || runner.os == 'macOS'
    - name: Build with Gradle Wrapper
      run: ./gradlew build
      
    - name: Docker Login
      uses: docker/login-action@v3.2.0
      with:
        username: ${{secrets.DOCKER_USERNAME}} 
        password: ${{secrets.DOCKER_PASSWORD}}
    - name: Docker build
      run: docker build -t ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPO}} .
    - name: Docker push
      run: docker push ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPO}}
    - name: ssh
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{secrets.SSH_HOST}}
        username: ${{secrets.SSH_USERNAME}}
        key: ${{secrets.SSH_PASSWORD}}
        script: |
          docker pull ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPO}}
          docker rm -f ${{secrets.DOCKER_REPO}}
          docker run --name ${{secrets.DOCKER_REPO}} -p 8080:8080 -e profiles=prod -e username=${{secrets.SQL_USERNAME}} -e password=${{secrets.SQL_PASSWORD}} --network server -d ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_REPO}}
            

    
